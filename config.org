#+TITLE: Atri Hegde's Emacs config
#+AUTHOR: Atri Hegde
#+OPTIONS: toc:2

I am messing around with Emacs for now. Waiting for Emacs 29 to come out before I try to build my config from scratch


* Base settings
** Sensible defaults
#+begin_src emacs-lisp
(setq inhibit-startup-message t)
(scroll-bar-mode -1)      ; disable visible scroll bar
(tooltip-mode -1)         ; disable tooltips
(tool-bar-mode -1)        ; disable the toolbar
(set-fringe-mode 10)      ; give some breathing room
(menu-bar-mode -1)        ; disable menu bar
(column-number-mode)
(setq visible-bell t)     ; enable visible bell
#+end_src
** Handle line numbers
#+begin_src emacs-lisp
(global-display-line-numbers-mode t)
(setq display-line-numbers-type 'relative)

;; disable line numbers for some modes
(dolist (mode '(term-mode-hook
                eshell-mode-hook))
  (add-hook mode(lamda () (display-line-numbers-mode 0))))
#+end_src
** Setup font
#+begin_src emacs-lisp
(set-face-attribute 'default nil :font "Fira Code Retina" :height 280)
#+end_src
** Set theme
#+begin_src emacs-lisp
;; (load-theme 'wombat)
#+end_src

* Package management
** Setup package.el to work with MELPA
#+begin_src emacs-lisp
(require 'package)
(add-to-list 'package-archives '(("melpa" . "https://melpa.org/packages/")
                                 ("org" . "https://orgmode.org/elpa")
                                 ("elpa" . "https://elpa.gnu.org/packages")))
(package-initialize)
(unless package-archive-contents
  (package-refresh-contents))
#+end_src
** Install use-package
#+begin_src emacs-lisp
(unless (package-installed-p 'use-package)
  (package-install 'use-package))

(require 'use-package)
(setq use-package-always ensure t)
#+end_src
* Ivy
#+begin_src emacs-lisp
(use-package ivy
  :diminish
  :bind (("C-s" . swiper)
         :map ivy-minibuffer-map
         ("TAB" . ivy-alt-done)
         ("C-l" . ivy-alt-done)
         ("C-j" . ivy-next-line)
         ("C-k" . ivy-previous-line)
         :map ivy-switch-buffer-map
         ("C-d" . ivy-switch-buffer-kill)
         ("C-l" . ivy-done)
         ("C-k" . ivy-previous-line)
         :map ivy-reverse-i-search-map
         ("C-k" . ivy-previous-line)
         ("C-d" . ivy-reverse-i-search-kill))
  :config
  (ivy-mode 1))
#+end_src

* Appearance
** Theme
#+begin_src emacs-lisp
(use-package doom-themes
  :if window-system
  :ensure t
  :config
  (load-theme 'doom-badger t)
  (doom-themes-org-config)
  (doom-themes-visual-bell-config))
#+end_src
** Dashboard
#+begin_src emacs-lisp
(use-package dashboard
  :ensure t
  :config
  (dashboard-setup-startup-hook)
  (setq dashboard-startup-banner "~/.emacs.d/splash.png")
  (setq dashboard-banner-logo-title "Why would you ever leave Emacs?"))
#+end_src
** Doom modeline
#+begin_src emacs-lisp
(use-package doom-modeline
  :ensure t
  :init (doom-modeline 1)
  :custom ((doom-modeline-height 15)))
#+end_src
** Rainbow delimiters
#+begin_src emacs-lisp
(use-package rainbow-delimiters
  :hook (prog-mode . rainbow-delimiters-mode))
#+end_src
** Which key
#+begin_src emacs-lisp
(use-package which-key
  :init (which-key-mode)
  :diminish which-key-mode
  :config
  (setq which-key-idle-delay 0.3))
#+end_src
